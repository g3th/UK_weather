#!/usr/bin/python3
import requests
import json
import time
from random import randint
from header import title
from bs4 import BeautifulSoup as soup
while True:
	title()
	try:
		postcode = input('\nPlease Enter a Valid UK Postcode (format: AB1 2CD): ')
		location = 'https://www.doogal.co.uk/UKPostcodes.php?Search='
		location_page=location+postcode
		fetch_location = requests.get(location_page)
		parse_location = soup(fetch_location.content, 'html.parser')
		location= parse_location.find('p').text.split('areas of')[1].split('.')[0]
		break
	except IndexError:
	
		print('Invalid Postcode, Please Try Again.\n')
		input('(Hit Enter)')
title()
print('\n\33[38;5;226mCurrent weather for{}'.format(location))
print('---------------------------------------------------')
page = 'https://weather-broker-cdn.api.bbci.co.uk/en/forecast/aggregated/{}'.format(postcode)
current_weather = requests.get(page).json()
day = 0
forecast_and_reports_counter = 0
descriptions_counter = 0
timeout = 0
weather_box_colours = ['208','226','123','33']
colour_index =0
while day < 7:
	try:
		if descriptions_counter < 1:
			numeric_date = current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['localDate']
			obtain_the_date = 'https://www.calculator.net/day-of-the-week-calculator.html?today={}&x=99&y=11'.format(numeric_date.replace('-','%2F'))
			fetch_date_data = requests.get(obtain_the_date)
			parse_date_data = soup(fetch_date_data.content,'html.parser')
			today_date = parse_date_data.find('p',{'class':'verybigtext'})
			month_day = today_date.text.split(' ')[5]
			month_name = today_date.text.split(' ')[0]
			month_number = today_date.text.split(' ')[1]
			year = today_date.text.split(' ')[2]
			print('\r\33[38;5;202mThis is the forecast for {} {} {} {}'.format(month_day, month_name, month_number, year),end='')
			print('\n---------------------------------------------------')
			error_flag = 0
	except KeyError:
		print('\r\33[38;5;{}mFetching Please Wait'.format(str(randint(0,255))), end='')
		current_weather = requests.get(page).json()
		error_flag = 1
		timeout += 1
		if timeout == 50:
			print('\nNot Found. Postcode is probably not an active post code')
			exit()
	if error_flag == 0:
		try:
			if colour_index > 3:
				colour_index =0					
			print('\33[38;5;{}mHour {} - Summary: {} 		          '.format(weather_box_colours[colour_index],current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['timeslot'], current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['enhancedWeatherDescription']))
			print('Temp: {}Â° | Rain Probability: {}% | Winds: {} | Wind Speed: {}mph | Humidity: {}%'.format(current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['temperatureC'],current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['precipitationProbabilityInPercent'],current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['windDirection'],current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['windSpeedMph'],current_weather['forecasts'][forecast_and_reports_counter]['detailed']['reports'][descriptions_counter]['humidity'] ))
			print('--------------------------------------------------------------------------------')
			descriptions_counter +=1
			colour_index +=1
		except IndexError:
			forecast_and_reports_counter += 1
			descriptions_counter = 0
			day += 1
			input('\n\33[38;5;81mHit Enter for {} {} {} {}'.format(month_day, month_name, month_number, year))
			title()
			print('\n\33[38;5;226mCurrent weather for{}'.format(location))
			print('---------------------------------------------------')
title()
print ('\nThat was your 7 day forecast\n')
